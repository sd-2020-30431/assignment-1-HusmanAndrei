{"ast":null,"code":"class HttpService {\n  constructor() {\n    this.url = \"http://localhost:8080\";\n  }\n\n  async initLogin(username, password) {\n    const response = await fetch(`${this.url}/login`, {\n      body: JSON.stringify({\n        name: username,\n        password: password\n      }),\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json());\n    return response;\n  }\n\n  async getGroceries(userId) {\n    const response = await fetch(`${this.url}/grocery`, {\n      headers: {\n        'Authorization': `Bearer ${userId}`,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json());\n    const mapped = response.map(r => this.changeBackTimeFormat(r));\n    console.log('items', response);\n    return mapped;\n  }\n\n  async addGrocery(userId, groceryItem) {\n    const newItem = this.changeTimeFormat(groceryItem);\n    const response = await fetch(`${this.url}/grocery`, {\n      headers: {\n        'Authorization': `Bearer ${userId}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newItem),\n      method: 'POST'\n    }).then(resp => resp.json());\n    console.log('item', response);\n    return response;\n  }\n\n  async getReports(userId) {\n    const response = await fetch(`${this.url}/stats/all`, {\n      headers: {\n        'Authorization': `Bearer ${userId}`,\n        'Content-Type': 'application/json'\n      }\n    }).then(resp => resp.json());\n    return response;\n  }\n\n  async donateItem(userId, itemId) {\n    console.log('item id', itemId);\n    const response = await fetch(`${this.url}/donate?itemId=${itemId}`, {\n      headers: {\n        'Authorization': `Bearer ${userId}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'DELETE'\n    }).then(resp => resp.json());\n    return response;\n  }\n\n  changeTimeFormat(groceryItem) {\n    const newItem = JSON.parse(JSON.stringify(groceryItem));\n    newItem.purchaseDate = groceryItem.purchaseDate.getTime();\n\n    if (groceryItem.consumptionDate !== null) {\n      newItem.consumptionDate = groceryItem.consumptionDate.getTime();\n    } else {\n      newItem.consumptionDate = null;\n    }\n\n    newItem.expirationDate = groceryItem.expirationDate.getTime();\n    return newItem;\n  }\n\n  changeBackTimeFormat(groceryItem) {\n    const newItem = JSON.parse(JSON.stringify(groceryItem));\n    newItem.purchaseDate = new Date().setTime(groceryItem.purchaseDate);\n    newItem.consumptionDate = new Date().setTime(groceryItem.consumptionDate);\n    newItem.expirationDate = new Date().setTime(groceryItem.expirationDate);\n    return newItem;\n  }\n\n}\n\nconst httpInstance = new HttpService();\nexport default httpInstance;","map":{"version":3,"sources":["/Users/macbookpro/Desktop/sd final/wasteless-final2/src/services/httpService.js"],"names":["HttpService","constructor","url","initLogin","username","password","response","fetch","body","JSON","stringify","name","method","headers","then","json","getGroceries","userId","mapped","map","r","changeBackTimeFormat","console","log","addGrocery","groceryItem","newItem","changeTimeFormat","resp","getReports","donateItem","itemId","parse","purchaseDate","getTime","consumptionDate","expirationDate","Date","setTime","httpInstance"],"mappings":"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","sourcesContent":["\n\nclass HttpService{\n\n    constructor() {\n        this.url = \"http://localhost:8080\";\n    }\n\n    async initLogin(username, password){\n        const response = await fetch(`${this.url}/login`, {\n            body: JSON.stringify({\n                name: username,\n                password: password\n            }),\n            method: 'POST',\n            headers:  {'Content-Type' : 'application/json' }\n        }).then(response => response.json());\n        return response;\n    }\n\n    async getGroceries(userId){\n        const response = await fetch(`${this.url}/grocery`,{\n            headers: {\n                'Authorization' : `Bearer ${userId}`,\n                'Content-Type' : 'application/json'\n            }\n        }).then(response => response.json());\n        const mapped = response.map(r => this.changeBackTimeFormat(r));\n        console.log('items', response)\n\n        return mapped;\n    }\n\n    async addGrocery(userId, groceryItem){\n        const newItem =  this.changeTimeFormat(groceryItem);\n        const response = await fetch(`${this.url}/grocery`,{\n            headers: {\n                'Authorization' : `Bearer ${userId}`,\n                'Content-Type' : 'application/json'\n            },\n            body : JSON.stringify(newItem),\n            method : 'POST'\n        }).then(resp => resp.json());\n        console.log('item', response);\n        return response;\n    }\n\n    async getReports(userId){\n        const response = await fetch(`${this.url}/stats/all`,{\n            headers: {\n                'Authorization' : `Bearer ${userId}`,\n                'Content-Type' : 'application/json'\n            }\n        }).then(resp => resp.json());\n        return response;\n\n    }\n\n    async donateItem(userId, itemId){\n        console.log('item id', itemId)\n        const response = await fetch(`${this.url}/donate?itemId=${itemId}`,{\n            headers: {\n                'Authorization' : `Bearer ${userId}`,\n                'Content-Type' : 'application/json'\n            },\n            method: 'DELETE'\n        }).then(resp => resp.json());\n        return response;\n    }\n\n    changeTimeFormat(groceryItem){\n        const newItem = JSON.parse(JSON.stringify(groceryItem))\n        newItem.purchaseDate = groceryItem.purchaseDate.getTime();\n        if(groceryItem.consumptionDate !== null){\n            newItem.consumptionDate = groceryItem.consumptionDate.getTime();\n\n        }\n        else{\n            newItem.consumptionDate = null;\n        }\n        newItem.expirationDate = groceryItem.expirationDate.getTime();\n        return newItem;\n    }\n\n    changeBackTimeFormat(groceryItem){\n        const newItem = JSON.parse(JSON.stringify(groceryItem))\n        newItem.purchaseDate = (new Date() ).setTime(groceryItem.purchaseDate);\n        newItem.consumptionDate =  (new Date() ).setTime(groceryItem.consumptionDate);\n        newItem.expirationDate = (new Date() ).setTime(groceryItem.expirationDate);\n        return newItem;\n    }\n\n\n\n}\nconst httpInstance = new HttpService();\nexport default httpInstance;"]},"metadata":{},"sourceType":"module"}